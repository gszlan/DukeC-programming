Grading at Fri Sep 27 21:22:35 UTC 2019
Compiling your code
rm -f test poker cards.o my-test-main.o *~
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o deck.o deck.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o eval.o eval.c
cc -ggdb3 -Wall -Werror -pedantic -std=gnu99   -c -o cards.o cards.c
gcc -o test-eval -ggdb3 deck.o deck-c4.o eval-c4.o eval.o test-eval.o cards.o input.o future.o
Testcase 1: Trying hands with nothing
Valgrind returned an error status
==2063== Memcheck, a memory error detector
==2063== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2063== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2063== Command: ./test-eval inp.1.txt
==2063== Parent PID: 2062
==2063== 
==2063== Conditional jump or move depends on uninitialised value(s)
==2063==    at 0x401BAF: compare_hands (eval.c:207)
==2063==    by 0x402A7E: main (test-eval.c:124)
==2063== 
==2063== Use of uninitialised value of size 8
==2063==    at 0x401B70: compare_hands (eval.c:208)
==2063==    by 0x402A7E: main (test-eval.c:124)
==2063== 
==2063== Use of uninitialised value of size 8
==2063==    at 0x401B7C: compare_hands (eval.c:208)
==2063==    by 0x402A7E: main (test-eval.c:124)
==2063== 
==2063== Use of uninitialised value of size 8
==2063==    at 0x401B92: compare_hands (eval.c:212)
==2063==    by 0x402A7E: main (test-eval.c:124)
==2063== 
==2063== Use of uninitialised value of size 8
==2063==    at 0x401B9E: compare_hands (eval.c:212)
==2063==    by 0x402A7E: main (test-eval.c:124)
==2063== 
==2063== 
==2063== HEAP SUMMARY:
==2063==     in use at exit: 0 bytes in 0 blocks
==2063==   total heap usage: 278 allocs, 278 frees, 13,728 bytes allocated
==2063== 
==2063== All heap blocks were freed -- no leaks are possible
==2063== 
==2063== For counts of detected and suppressed errors, rerun with: -v
==2063== Use --track-origins=yes to see where uninitialised values come from
==2063== ERROR SUMMARY: 43 errors from 5 contexts (suppressed: 0 from 0)
Testcase 2: Trying hands with pairs
Valgrind returned an error status
==2068== Memcheck, a memory error detector
==2068== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2068== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2068== Command: ./test-eval inp.2.txt
==2068== Parent PID: 2067
==2068== 
==2068== Conditional jump or move depends on uninitialised value(s)
==2068==    at 0x401BAF: compare_hands (eval.c:207)
==2068==    by 0x402A7E: main (test-eval.c:124)
==2068== 
==2068== Use of uninitialised value of size 8
==2068==    at 0x401B70: compare_hands (eval.c:208)
==2068==    by 0x402A7E: main (test-eval.c:124)
==2068== 
==2068== Use of uninitialised value of size 8
==2068==    at 0x401B7C: compare_hands (eval.c:208)
==2068==    by 0x402A7E: main (test-eval.c:124)
==2068== 
==2068== Use of uninitialised value of size 8
==2068==    at 0x401B92: compare_hands (eval.c:212)
==2068==    by 0x402A7E: main (test-eval.c:124)
==2068== 
==2068== Use of uninitialised value of size 8
==2068==    at 0x401B9E: compare_hands (eval.c:212)
==2068==    by 0x402A7E: main (test-eval.c:124)
==2068== 
==2068== 
==2068== HEAP SUMMARY:
==2068==     in use at exit: 0 bytes in 0 blocks
==2068==   total heap usage: 232 allocs, 232 frees, 13,028 bytes allocated
==2068== 
==2068== All heap blocks were freed -- no leaks are possible
==2068== 
==2068== For counts of detected and suppressed errors, rerun with: -v
==2068== Use --track-origins=yes to see where uninitialised values come from
==2068== ERROR SUMMARY: 40 errors from 5 contexts (suppressed: 0 from 0)
Testcase 3: Trying hands with 2 pairs
Valgrind returned an error status
==2073== Memcheck, a memory error detector
==2073== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2073== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2073== Command: ./test-eval inp.3.txt
==2073== Parent PID: 2072
==2073== 
==2073== Conditional jump or move depends on uninitialised value(s)
==2073==    at 0x401BAF: compare_hands (eval.c:207)
==2073==    by 0x402A7E: main (test-eval.c:124)
==2073== 
==2073== Use of uninitialised value of size 8
==2073==    at 0x401B70: compare_hands (eval.c:208)
==2073==    by 0x402A7E: main (test-eval.c:124)
==2073== 
==2073== Use of uninitialised value of size 8
==2073==    at 0x401B7C: compare_hands (eval.c:208)
==2073==    by 0x402A7E: main (test-eval.c:124)
==2073== 
==2073== Use of uninitialised value of size 8
==2073==    at 0x401B92: compare_hands (eval.c:212)
==2073==    by 0x402A7E: main (test-eval.c:124)
==2073== 
==2073== Use of uninitialised value of size 8
==2073==    at 0x401B9E: compare_hands (eval.c:212)
==2073==    by 0x402A7E: main (test-eval.c:124)
==2073== 
==2073== 
==2073== HEAP SUMMARY:
==2073==     in use at exit: 0 bytes in 0 blocks
==2073==   total heap usage: 544 allocs, 544 frees, 18,344 bytes allocated
==2073== 
==2073== All heap blocks were freed -- no leaks are possible
==2073== 
==2073== For counts of detected and suppressed errors, rerun with: -v
==2073== Use --track-origins=yes to see where uninitialised values come from
==2073== ERROR SUMMARY: 92 errors from 5 contexts (suppressed: 0 from 0)
Testcase 4: Trying hands with 3 of a kind
Valgrind returned an error status
==2078== Memcheck, a memory error detector
==2078== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2078== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2078== Command: ./test-eval inp.4.txt
==2078== Parent PID: 2077
==2078== 
==2078== Conditional jump or move depends on uninitialised value(s)
==2078==    at 0x401BAF: compare_hands (eval.c:207)
==2078==    by 0x402A7E: main (test-eval.c:124)
==2078== 
==2078== Use of uninitialised value of size 8
==2078==    at 0x401B70: compare_hands (eval.c:208)
==2078==    by 0x402A7E: main (test-eval.c:124)
==2078== 
==2078== Use of uninitialised value of size 8
==2078==    at 0x401B7C: compare_hands (eval.c:208)
==2078==    by 0x402A7E: main (test-eval.c:124)
==2078== 
==2078== Use of uninitialised value of size 8
==2078==    at 0x401B92: compare_hands (eval.c:212)
==2078==    by 0x402A7E: main (test-eval.c:124)
==2078== 
==2078== Use of uninitialised value of size 8
==2078==    at 0x401B9E: compare_hands (eval.c:212)
==2078==    by 0x402A7E: main (test-eval.c:124)
==2078== 
==2078== 
==2078== HEAP SUMMARY:
==2078==     in use at exit: 0 bytes in 0 blocks
==2078==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==2078== 
==2078== All heap blocks were freed -- no leaks are possible
==2078== 
==2078== For counts of detected and suppressed errors, rerun with: -v
==2078== Use --track-origins=yes to see where uninitialised values come from
==2078== ERROR SUMMARY: 74 errors from 5 contexts (suppressed: 0 from 0)
Testcase 5: Trying hands with straights
Valgrind returned an error status
==2083== Memcheck, a memory error detector
==2083== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2083== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2083== Command: ./test-eval inp.5.txt
==2083== Parent PID: 2082
==2083== 
==2083== Conditional jump or move depends on uninitialised value(s)
==2083==    at 0x401BAF: compare_hands (eval.c:207)
==2083==    by 0x402A7E: main (test-eval.c:124)
==2083== 
==2083== Use of uninitialised value of size 8
==2083==    at 0x401B70: compare_hands (eval.c:208)
==2083==    by 0x402A7E: main (test-eval.c:124)
==2083== 
==2083== Use of uninitialised value of size 8
==2083==    at 0x401B7C: compare_hands (eval.c:208)
==2083==    by 0x402A7E: main (test-eval.c:124)
==2083== 
==2083== Use of uninitialised value of size 8
==2083==    at 0x401B92: compare_hands (eval.c:212)
==2083==    by 0x402A7E: main (test-eval.c:124)
==2083== 
==2083== Use of uninitialised value of size 8
==2083==    at 0x401B9E: compare_hands (eval.c:212)
==2083==    by 0x402A7E: main (test-eval.c:124)
==2083== 
==2083== 
==2083== HEAP SUMMARY:
==2083==     in use at exit: 0 bytes in 0 blocks
==2083==   total heap usage: 360 allocs, 360 frees, 15,704 bytes allocated
==2083== 
==2083== All heap blocks were freed -- no leaks are possible
==2083== 
==2083== For counts of detected and suppressed errors, rerun with: -v
==2083== Use --track-origins=yes to see where uninitialised values come from
==2083== ERROR SUMMARY: 41 errors from 5 contexts (suppressed: 0 from 0)
Testcase 6: Trying hands with flushes
Valgrind returned an error status
==2088== Memcheck, a memory error detector
==2088== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2088== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2088== Command: ./test-eval inp.6.txt
==2088== Parent PID: 2087
==2088== 
==2088== Conditional jump or move depends on uninitialised value(s)
==2088==    at 0x401BAF: compare_hands (eval.c:207)
==2088==    by 0x402A7E: main (test-eval.c:124)
==2088== 
==2088== Use of uninitialised value of size 8
==2088==    at 0x401B70: compare_hands (eval.c:208)
==2088==    by 0x402A7E: main (test-eval.c:124)
==2088== 
==2088== Use of uninitialised value of size 8
==2088==    at 0x401B7C: compare_hands (eval.c:208)
==2088==    by 0x402A7E: main (test-eval.c:124)
==2088== 
==2088== Use of uninitialised value of size 8
==2088==    at 0x401B92: compare_hands (eval.c:212)
==2088==    by 0x402A7E: main (test-eval.c:124)
==2088== 
==2088== Use of uninitialised value of size 8
==2088==    at 0x401B9E: compare_hands (eval.c:212)
==2088==    by 0x402A7E: main (test-eval.c:124)
==2088== 
==2088== 
==2088== HEAP SUMMARY:
==2088==     in use at exit: 0 bytes in 0 blocks
==2088==   total heap usage: 898 allocs, 898 frees, 25,784 bytes allocated
==2088== 
==2088== All heap blocks were freed -- no leaks are possible
==2088== 
==2088== For counts of detected and suppressed errors, rerun with: -v
==2088== Use --track-origins=yes to see where uninitialised values come from
==2088== ERROR SUMMARY: 172 errors from 5 contexts (suppressed: 0 from 0)
Testcase 7: Trying hands with full houses
Valgrind returned an error status
==2093== Memcheck, a memory error detector
==2093== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2093== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2093== Command: ./test-eval inp.7.txt
==2093== Parent PID: 2092
==2093== 
==2093== Conditional jump or move depends on uninitialised value(s)
==2093==    at 0x401BAF: compare_hands (eval.c:207)
==2093==    by 0x402A7E: main (test-eval.c:124)
==2093== 
==2093== Use of uninitialised value of size 8
==2093==    at 0x401B70: compare_hands (eval.c:208)
==2093==    by 0x402A7E: main (test-eval.c:124)
==2093== 
==2093== Use of uninitialised value of size 8
==2093==    at 0x401B7C: compare_hands (eval.c:208)
==2093==    by 0x402A7E: main (test-eval.c:124)
==2093== 
==2093== Use of uninitialised value of size 8
==2093==    at 0x401B92: compare_hands (eval.c:212)
==2093==    by 0x402A7E: main (test-eval.c:124)
==2093== 
==2093== Use of uninitialised value of size 8
==2093==    at 0x401B9E: compare_hands (eval.c:212)
==2093==    by 0x402A7E: main (test-eval.c:124)
==2093== 
==2093== 
==2093== HEAP SUMMARY:
==2093==     in use at exit: 0 bytes in 0 blocks
==2093==   total heap usage: 636 allocs, 636 frees, 21,404 bytes allocated
==2093== 
==2093== All heap blocks were freed -- no leaks are possible
==2093== 
==2093== For counts of detected and suppressed errors, rerun with: -v
==2093== Use --track-origins=yes to see where uninitialised values come from
==2093== ERROR SUMMARY: 70 errors from 5 contexts (suppressed: 0 from 0)
Testcase 8: Trying hands with 4 of a kind
Valgrind returned an error status
==2098== Memcheck, a memory error detector
==2098== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2098== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2098== Command: ./test-eval inp.8.txt
==2098== Parent PID: 2097
==2098== 
==2098== Conditional jump or move depends on uninitialised value(s)
==2098==    at 0x401BAF: compare_hands (eval.c:207)
==2098==    by 0x402A7E: main (test-eval.c:124)
==2098== 
==2098== Use of uninitialised value of size 8
==2098==    at 0x401B70: compare_hands (eval.c:208)
==2098==    by 0x402A7E: main (test-eval.c:124)
==2098== 
==2098== Use of uninitialised value of size 8
==2098==    at 0x401B7C: compare_hands (eval.c:208)
==2098==    by 0x402A7E: main (test-eval.c:124)
==2098== 
==2098== Use of uninitialised value of size 8
==2098==    at 0x401B92: compare_hands (eval.c:212)
==2098==    by 0x402A7E: main (test-eval.c:124)
==2098== 
==2098== Use of uninitialised value of size 8
==2098==    at 0x401B9E: compare_hands (eval.c:212)
==2098==    by 0x402A7E: main (test-eval.c:124)
==2098== 
==2098== 
==2098== HEAP SUMMARY:
==2098==     in use at exit: 0 bytes in 0 blocks
==2098==   total heap usage: 352 allocs, 352 frees, 15,296 bytes allocated
==2098== 
==2098== All heap blocks were freed -- no leaks are possible
==2098== 
==2098== For counts of detected and suppressed errors, rerun with: -v
==2098== Use --track-origins=yes to see where uninitialised values come from
==2098== ERROR SUMMARY: 77 errors from 5 contexts (suppressed: 0 from 0)
Testcase 9: Trying hands with straight flushes
Valgrind returned an error status
==2103== Memcheck, a memory error detector
==2103== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==2103== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==2103== Command: ./test-eval inp.9.txt
==2103== Parent PID: 2102
==2103== 
==2103== Conditional jump or move depends on uninitialised value(s)
==2103==    at 0x401BAF: compare_hands (eval.c:207)
==2103==    by 0x402A7E: main (test-eval.c:124)
==2103== 
==2103== Use of uninitialised value of size 8
==2103==    at 0x401B70: compare_hands (eval.c:208)
==2103==    by 0x402A7E: main (test-eval.c:124)
==2103== 
==2103== Use of uninitialised value of size 8
==2103==    at 0x401B7C: compare_hands (eval.c:208)
==2103==    by 0x402A7E: main (test-eval.c:124)
==2103== 
==2103== Use of uninitialised value of size 8
==2103==    at 0x401B92: compare_hands (eval.c:212)
==2103==    by 0x402A7E: main (test-eval.c:124)
==2103== 
==2103== Use of uninitialised value of size 8
==2103==    at 0x401B9E: compare_hands (eval.c:212)
==2103==    by 0x402A7E: main (test-eval.c:124)
==2103== 
==2103== 
==2103== HEAP SUMMARY:
==2103==     in use at exit: 0 bytes in 0 blocks
==2103==   total heap usage: 274 allocs, 274 frees, 13,808 bytes allocated
==2103== 
==2103== All heap blocks were freed -- no leaks are possible
==2103== 
==2103== For counts of detected and suppressed errors, rerun with: -v
==2103== Use --track-origins=yes to see where uninitialised values come from
==2103== ERROR SUMMARY: 36 errors from 5 contexts (suppressed: 0 from 0)
Testcase 10: Trying each type of hand ranking
 Checking the output 
Your file matched the expected output
 - Testcase passed

Overall Grade: F
